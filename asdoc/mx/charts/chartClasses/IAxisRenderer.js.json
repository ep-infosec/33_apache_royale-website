{ "type": "interface",
  "qname": "mx.charts.chartClasses.IAxisRenderer",
"baseInterfaceNames": [
"mx.core.IUIComponent"]
,
    "description": "The IAxis class is an abstract interface for defining label, tick mark, and data positioning properties for a chart axis.  <p>Classes implement this interface to provide range definition functionality.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.charts.CategoryAxis", "mx.charts.LinearAxis"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "mx.charts.chartClasses.IAxis",
    "qname": "axis",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The axis object associated with this renderer. This property is managed by the enclosing chart, and should not be explicitly set.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.geom.Rectangle",
    "qname": "gutters",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The distance between the axisRenderer and the sides of the surrounding chart. This property is assigned automatically by the chart, and should not be assigned directly.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "heightLimit",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The maximum amount of space, in pixels, that an axis renderer will take from a chart. Axis Renderers by default will take up as much space in the chart as necessary to render all of their labels at full size. If heightLimit is set, an AxisRenderer will resort to reducing the labels in size in order to guarantee the total size of the axis is less than heightLimit.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "horizontal",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "<code>true</code> if the axis renderer is being used as a horizontal axis. This property is managed by the enclosing CartesianChart, and should not be set directly.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Array",
    "qname": "minorTicks",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Contains an array that specifies where Flex draws the minor tick marks along the axis. Each array element contains a value between 0 and 1.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "write-only",
    "return": "Array",
    "qname": "otherAxes",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "An Array of axes.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "String",
    "qname": "placement",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The side of the chart the axisRenderer will appear on. Legal values are <code>&quot;left&quot;</code> and <code>&quot;right&quot;</code> for vertical axis renderers and <code>&quot;top&quot;</code> and <code>&quot;bottom&quot;</code> for horizontal axis renderers. By default, primary axes are placed on the left and top, and secondary axes are placed on the right and bottom. CartesianCharts automatically guarantee that secondary axes are placed opposite primary axes; if you explicitly place a primary vertical axis on the right, for example, the secondary vertical axis is swapped to the left.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Array",
    "qname": "ticks",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Contains an array that specifies where Flex draws the tick marks along the axis. Each array element contains a value between 0 and 1.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "adjustGutters",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Adjusts its layout to accomodate the gutters passed in. This method is called by the enclosing chart to determine the size of the gutters and the corresponding data area. This method provides the AxisRenderer with an opportunity to calculate layout based on the new gutters, and to adjust them if necessary. If a given gutter is adjustable, an axis renderer can optionally adjust the gutters inward (make the gutter larger) but not outward (make the gutter smaller).   (left=true/false, top=true/false, right=true/false, and bottom=true/false) that indicate whether the axis renderer can optionally adjust each of the gutters further.  adjustments.",
    "tags": [
    {  "tagName": "param",
           "values": ["workingGutters Defines the gutters to adjust.", "adjustable Consists of four Boolean properties"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["A rectangle that defines the dimensions of the gutters, including the"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "org.apache.royale.geom.Rectangle",
      "params": [{ "name": "workingGutters", "type": "org.apache.royale.geom.Rectangle"},
    { "name": "adjustable", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "chartStateChanged",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called by the enclosing chart to indicate that the current state of the chart has changed. Implementing elements should respond to this method in order to synchronize changes to the data displayed by the element.",
    "tags": [
    {  "tagName": "param",
           "values": ["oldState An integer representing the previous state.", "v An integer representing the new state."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "oldState", "type": "uint"},
    { "name": "v", "type": "uint"}]}
  ]
  }
