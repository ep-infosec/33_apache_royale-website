{ "type": "interface",
  "qname": "mx.collections.IList",
"baseInterfaceNames": [
"org.apache.royale.events.IEventDispatcher"]
,
    "description": "A collection of items organized in an ordinal fashion. Provides access and manipulation methods based on index.  <p>An <code>IList</code> may be a view onto data that has been retrieved from a  remote location. When writing for a collection that may be remote, it is important to handle the case where data may not yet be available, which is indicated by the  <code>ItemPendingError</code>.</p>  <p>The <code>ICollectionView</code> is an alternative to the <code>IList</code>.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.collections.errors.ItemPendingError", "mx.collections.ICollectionView", "mx.collections.ListCollectionView"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "length",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The number of items in this collection. 0 means no items while -1 means the length is unknown.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "addItem",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Adds the specified item to the end of the list. Equivalent to <code>addItemAt(item, length)</code>.",
    "tags": [
    {  "tagName": "param",
           "values": ["item The item to add."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "item", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "addItemAt",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Adds the item at the specified index. The index of any item greater than the index of the added item is increased by one. If the the specified index is less than zero or greater than the length of the list, a RangeError is thrown.",
    "tags": [
    {  "tagName": "param",
           "values": ["item The item to place at the index.", "index The index at which to place the item."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "throws",
           "values": ["RangeError if index is less than 0 or greater than the length of the list."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "item", "type": "Object"},
    { "name": "index", "type": "int"}]}
  ,
  { "type": "method",
    "qname": "getItemAt",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gets the item at the specified index.   and number of items to fetch during the request if the item is not local.   loaded from a remote location.  or <code>index >= length</code>.",
    "tags": [
    {  "tagName": "param",
           "values": ["index The index in the list from which to retrieve the item.", "prefetch An <code>int</code> indicating both the direction"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "throws",
           "values": ["mx.collections.errors.ItemPendingError if the data for that index needs to be", "RangeError if <code>index &lt; 0</code>"]},
        {  "tagName": "return",
           "values": ["The item at that index, or <code>null</code> if there is none."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "index", "type": "int"},
    { "name": "prefetch", "type": "int"}]}
  ,
  { "type": "method",
    "qname": "getItemIndex",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns the index of the item if it is in the list such that getItemAt(index) == item.  <p>Note: unlike <code>IViewCursor.find<i>xxx</i>()</code> methods, The <code>getItemIndex()</code> method cannot take a parameter with only a subset of the fields in the item being serched for; this method always searches for an item that exactly matches the input parameter.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["item The item to find."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["The index of the item, or -1 if the item is not in the list."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "int",
      "params": [{ "name": "item", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "itemUpdated",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Notifies the view that an item has been updated. This is useful if the contents of the view do not implement <code>IEventDispatcher</code> and dispatches a <code>PropertyChangeEvent</code>. If a property is specified the view may be able to optimize its notification mechanism. Otherwise it may choose to simply refresh the whole view.    this can be the old value of the item.)  there's no need to specify this as the item is assumed to be the new value.)",
    "tags": [
    {  "tagName": "see",
           "values": ["mx.events.CollectionEvent", "mx.events.PropertyChangeEvent"]},
        {  "tagName": "param",
           "values": ["item The item within the view that was updated.", "property The name of the property that was updated.", "oldValue The old value of that property. (If property was null,", "newValue The new value of that property. (If property was null,"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "item", "type": "Object"},
    { "name": "property", "type": "Object"},
    { "name": "oldValue", "type": "Object"},
    { "name": "newValue", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "removeAll",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Removes all items from the list.  <p>If any item is not local and an asynchronous operation must be performed, an <code>ItemPendingError</code> will be thrown.</p>  <p>See the ItemPendingError documentation as well as the collections documentation for more information on using the <code>ItemPendingError</code>.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "removeItemAt",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Removes the item at the specified index and returns it. Any items that were after this index are now one index earlier.",
    "tags": [
    {  "tagName": "param",
           "values": ["index The index from which to remove the item."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "throws",
           "values": ["RangeError is index is less than 0 or greater than length."]},
        {  "tagName": "return",
           "values": ["The item that was removed."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "index", "type": "int"}]}
  ,
  { "type": "method",
    "qname": "setItemAt",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Places the item at the specified index. If an item was already at that index the new item will replace it and it will be returned.",
    "tags": [
    {  "tagName": "param",
           "values": ["item The new item to be placed at the specified index.", "index The index at which to place the item."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "throws",
           "values": ["RangeError if index is less than 0 or greater than length."]},
        {  "tagName": "return",
           "values": ["The item that was replaced, or <code>null</code> if none."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "item", "type": "Object"},
    { "name": "index", "type": "int"}]}
  ,
  { "type": "method",
    "qname": "toArray",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns an Array that is populated in the same order as the IList implementation. This method can throw an ItemPendingError.   from a remote location.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "throws",
           "values": ["mx.collections.errors.ItemPendingError If the data is not yet completely loaded"]},
        {  "tagName": "return",
           "values": ["The array."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Array",
      "params": []}
  ]
  }
