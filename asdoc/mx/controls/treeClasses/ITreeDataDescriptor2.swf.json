{ "type": "interface",
  "qname": "mx.controls.treeClasses.ITreeDataDescriptor2",
"baseInterfaceNames": [
"mx.controls.treeClasses.ITreeDataDescriptor"]
,
    "description": "The ITreeDataDescriptor2 Interface defines methods for parsing and adding nodes to a collection of data that is displayed by a Tree control.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.collections.ICollectionView"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
    "qname": "getHierarchicalCollectionAdaptor",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns an ICollectionView instance that makes the hierarchical data appear as if it was a linear ICollectionView instance.   This parameter is usually the <code>Tree.itemToUID()</code> method.",
    "tags": [
    {  "tagName": "see",
           "values": ["mx.controls.Tree"]},
        {  "tagName": "param",
           "values": ["hierarchicalData The hierarchical data.", "uidFunction A function that takes an Object and returns the UID, as a String.", "openItems The items that have been opened or set opened.", "model The collection to which this node belongs."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["An ICollectionView instance."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "mx.collections.ICollectionView",
      "params": [{ "name": "hierarchicalData", "type": "mx.collections.ICollectionView"},
    { "name": "uidFunction", "type": "Function"},
    { "name": "openItems", "type": "Object"},
    { "name": "model", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "getNodeDepth",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns the depth of the node, meaning the number of ancestors it has.     and -1 if the depth cannot be calculated.",
    "tags": [
    {  "tagName": "param",
           "values": ["node The Object that defines the node.", "iterator An IViewCursor instance that could be used to do the calculation.", "model The collection to which this node belongs."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["The depth of the node, where 0 corresponds to the top level,"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "int",
      "params": [{ "name": "node", "type": "Object"},
    { "name": "iterator", "type": "mx.collections.IViewCursor"},
    { "name": "model", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "getParent",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns the parent of the node The parent of a top-level node is <code>null</code>.     <code>null</code> for a top-level node, and <code>undefined</code> if the parent cannot be determined.",
    "tags": [
    {  "tagName": "param",
           "values": ["node The Object that defines the node.", "collection An ICollectionView instance that could be used to do the calculation.", "model The collection to which this node belongs."]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["The parent node containing the node as child,"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "node", "type": "Object"},
    { "name": "collection", "type": "mx.collections.ICollectionView"},
    { "name": "model", "type": "Object"}]}
  ]
  }
