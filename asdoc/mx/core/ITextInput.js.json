{ "type": "interface",
  "qname": "mx.core.ITextInput",
"baseInterfaceNames": [
"mx.core.IDataRenderer", 
"mx.core.IUIComponent", 
"mx.controls.listClasses.IDropInListItemRenderer", 
"mx.controls.listClasses.IListItemRenderer", 
"mx.managers.IFocusManagerComponent", 
"org.apache.royale.core.ITextInput"]
,
    "description": "Defines an interface for a single-line text field that is optionally editable.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "selectionActivePosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The zero-based index of the position <i>after</i> the last character in the current selection (equivalent to the one-based index of the last character). If the last character in the selection, for example, is the fifth character, this property has the value 5. When the control gets the focus, the selection is visible if the <code>selectionAnchorIndex</code> and <code>selectionActiveIndex</code> properties are both set.   in the selection.",
    "tags": [
    {  "tagName": "default",
           "values": ["0"]},
        {  "tagName": "tiptext",
           "values": ["The zero-based index value of the last character"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "selectionAnchorPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The zero-based character index value of the first character in the current selection. For example, the first character is 0, the second character is 1, and so on. When the control gets the focus, the selection is visible if the <code>selectionAnchorIndex</code> and <code>selectionActiveIndex</code> properties are both set.   in the selection.",
    "tags": [
    {  "tagName": "default",
           "values": ["0"]},
        {  "tagName": "tiptext",
           "values": ["The zero-based index value of the first character"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "editable",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether the user is allowed to edit the text in this control. If <code>true</code>, the user can edit the text.",
    "tags": [
    {  "tagName": "default",
           "values": ["true"]},
        {  "tagName": "helpid",
           "values": ["3196"]},
        {  "tagName": "tiptext",
           "values": ["Specifies whether the component is editable or not"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "horizontalScrollPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Pixel position in the content area of the leftmost pixel that is currently displayed. (The content area includes all contents of a control, not just the portion that is currently displayed.) This property is always set to 0, and ignores changes, if <code>wordWrap</code> is set to <code>true</code>.   that is currently displayed",
    "tags": [
    {  "tagName": "default",
           "values": ["0"]},
        {  "tagName": "helpid",
           "values": ["3194"]},
        {  "tagName": "tiptext",
           "values": ["The pixel position of the left-most character"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "int",
    "qname": "maxChars",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Maximum number of characters that users can enter in the text field. This property does not limit the length of text specified by the setting the control's <code>text</code> or <code>htmlText</code> property.  <p>The default value is 0, which is a special case meaning an unlimited number.</p>  that the TextInput can contain",
    "tags": [
    {  "tagName": "helpid",
           "values": ["3191"]},
        {  "tagName": "tiptext",
           "values": ["The maximum number of characters"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "parentDrawsFocus",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "If true, calls to this control's <code>drawFocus()</code> method are forwarded to its parent's <code>drawFocus()</code> method. This is used when a TextInput is part of a composite control like NumericStepper or ComboBox;",
    "tags": [
    {  "tagName": "default",
           "values": ["false"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "String",
    "qname": "restrict",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates the set of characters that a user can enter into the control. If the value of the <code>restrict</code> property is <code>null</code>, you can enter any character. If the value of the <code>restrict</code> property is an empty string, you cannot enter any character. This property only restricts user interaction; a script can put any text into the text field. If the value of the <code>restrict</code> property is a string of characters, you may enter only characters in that string into the text field.  <p>Flex scans the string from left to right. You can specify a range by using the hyphen (-) character. If the string begins with a caret (^) character, all characters are initially accepted and succeeding characters in the string are excluded from the set of accepted characters. If the string does not begin with a caret (^) character, no characters are initially accepted and succeeding characters in the string are included in the set of accepted characters.</p>  <p>Because some characters have a special meaning when used in the <code>restrict</code> property, you must use backslash characters to specify the literal characters -, &#094;, and \\. When you use the <code>restrict</code> property as an attribute in an MXML tag, use single backslashes, as in the following example: \\&#094;\\-\\\\. When you set the <code>restrict</code> In and ActionScript expression, use double backslashes, as in the following example: \\\\&#094;\\\\-\\\\\\.</p>  into the TextInput.",
    "tags": [
    {  "tagName": "default",
           "values": ["null"]},
        {  "tagName": "see",
           "values": ["flash.text.TextField#restrict"]},
        {  "tagName": "helpid",
           "values": ["3193"]},
        {  "tagName": "tiptext",
           "values": ["The set of characters that may be entered"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "selectable",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "A flag indicating whether the text in the TextInput can be selected.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "selectRange",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Selects the text in the range specified by the parameters.  of the first character in the current selection.  after the last character in the current selection (equivalent to the one-based index of the last character).",
    "tags": [
    {  "tagName": "param",
           "values": ["anchorPosition The zero-based character index value", "activePosition The zero-based index of the position"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "anchorPosition", "type": "int"},
    { "name": "activePosition", "type": "int"}]}
  ]
  }
