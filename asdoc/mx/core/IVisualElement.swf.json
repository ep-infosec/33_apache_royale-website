{ "type": "interface",
  "qname": "mx.core.IVisualElement",
"baseInterfaceNames": [
"mx.core.ILayoutElement"]
,
    "description": "The IVisualElement interface defines the minimum properties and methods required for a visual element to be laid out and displayed in a Spark container.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "mx.core.IUIComponent",
    "qname": "owner",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The owner of this IVisualElement object. By default, it is the parent of this IVisualElement object. However, if this IVisualElement object is a child component that is popped up by its parent, such as the drop-down list of a ComboBox control, the owner is the component that popped up this IVisualElement object.  <p>This property is not managed by Flex, but by each component. Therefore, if you use the <code>PopUpManger.createPopUp()</code> or <code>PopUpManger.addPopUp()</code> method to pop up a child component, you should set the <code>owner</code> property of the child component to the component that popped it up.</p>  <p>The default value is the value of the <code>parent</code> property.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "org.apache.royale.core.IParent",
    "qname": "parent",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The parent container or component for this component. Only visual elements should have a <code>parent</code> property. Non-visual items should use another property to reference the object to which they belong. By convention, non-visual objects use an <code>owner</code> property to reference the object to which they belong.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "visible",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Controls the visibility of this visual element. If <code>true</code>, the object is visible.  <p>If an object is not visible, but the <code>includeInLayout</code> property is set to <code>true</code>, then the object takes up space in the container, but is invisible.</p>  <p>If <code>visible</code> is set to <code>true</code>, the object may not necessarily be visible due to its size and whether container clipping is enabled.</p>  <p>Setting <code>visible</code> to <code>false</code>, prevents the component from getting focus.</p>",
    "tags": [
    {  "tagName": "default",
           "values": ["true"]},
        {  "tagName": "see",
           "values": ["ILayoutElement#includeInLayout"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "alpha",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["flash.display.DisplayObject#alpha"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "width",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["flash.display.DisplayObject#width"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "height",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["flash.display.DisplayObject#height"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "x",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["flash.display.DisplayObject#x"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "y",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["flash.display.DisplayObject#y"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]}]
  }
