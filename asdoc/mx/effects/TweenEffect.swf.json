{ "type": "class",
  "qname": "mx.effects.TweenEffect",
  "baseClassname": "mx.effects.Effect"
  ,
    "description": "The TweenEffect class is the superclass for all effects that are based on the Tween object. This class encapsulates methods and properties that are common among all Tween-based effects, to avoid duplication of code elsewhere.  <p>You create a subclass of the TweenEffect class to define an effect that plays an animation over a period of time. For example, the Resize effect modifies the size of its target over a specified duration.</p>   <p>The <code>&lt;mx:TweenEffect&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;mx:TagName\\n <b>Properties</b>\\n easingFunction=&quot;<i>easing function name; no default</i>&quot;\\n \\n <b>Events</b>\\n tweenEnd=&quot;<i>No default</i>&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/SimpleTweenEffectExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.effects.Tween", "mx.effects.effectClasses.TweenEffectInstance"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.effects.TweenEffect",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "param",
               "values": ["target The Object to animate with this effect."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "target", "type": "Object"}]}
      ,
      { "type": "field",
        "qname": "easingFunction",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The easing function for the animation. The easing function is used to interpolate between the initial value and the final value. A trivial easing function would simply do linear interpolation, but more sophisticated easing functions create the illusion of acceleration and deceleration, which makes the animation seem more natural.  <p>If no easing function is specified, an easing function based on the <code>Math.sin()</code> method is used.</p>  <p>The easing function follows the function signature popularized by Robert Penner. The function accepts four arguments. The first argument is the &quot;current time&quot;, where the animation start time is 0. The second argument is the initial value at the beginning of the animation (a Number). The third argument is the ending value minus the initial value. The fourth argument is the duration of the animation. The return value is the interpolated value for the current time. This is usually a value between the initial value and the ending value.</p>  <p>The value of this property must be a function object.</p>  <p>Flex includes a set of easing functions in the mx.effects.easing package.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  { "qname": "tweenStart",
        "type": "mx.events.TweenEvent"
      ,
          "description": "Dispatched when the tween effect starts, which corresponds to the first call to the <code>onTweenUpdate()</code> method. Flex also dispatches the first <code>tweenUpdate</code> event for the effect at the same time.  <p>The <code>Effect.effectStart</code> event is dispatched before the <code>tweenStart</code> event.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.TweenEvent.TWEEN_START"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "tweenUpdate",
        "type": "mx.events.TweenEvent"
      ,
          "description": "Dispatched every time the tween effect updates the target. This event corresponds to a call to the <code>TweenEffectInstance.onTweenUpdate()</code> method.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.TweenEvent.TWEEN_UPDATE"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "tweenEnd",
        "type": "mx.events.TweenEvent"
      ,
          "description": "Dispatched when the tween effect ends. This event corresponds to a call to the <code>TweenEffectInstance.onTweenEnd()</code> method.  <p>When a tween effect plays a single time, this event occurs at the same time as an <code>effectEnd</code> event. If you configure the tween effect to repeat, it occurs at the end of every repetition of the effect, and the <code>endEffect</code> event occurs after the effect plays for the final time.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.TweenEvent.TWEEN_END"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
