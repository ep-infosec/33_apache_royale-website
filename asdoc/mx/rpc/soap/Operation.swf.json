{ "type": "class",
  "qname": "mx.rpc.soap.Operation",
  "baseClassname": "mx.rpc.AbstractOperation"
  ,
    "description": "An Operation used specifically by WebServices. An Operation is an individual method on a service. An Operation can be called either by invoking the function of the same name on the service or by accessing the Operation as a property on the service and calling the <code>send()</code> method.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.rpc.soap.Operation",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a new Operation. This is usually done directly by the MXML compiler or automatically by the WebService when an unknown operation has been accessed. It is not recommended that a developer use this constructor directly.",
        "tags": [
        {  "tagName": "param",
               "values": ["webService The web service upon which this Operation is invoked.", "name The name of this Operation."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "webService", "type": "mx.rpc.AbstractService"},
        { "name": "name", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.rpc.soap.ISOAPDecoder",
        "qname": "decoder",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.rpc.soap.ISOAPEncoder",
        "qname": "encoder",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "endpointURI",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The location of the WebService for this Operation. Normally, the WSDL specifies the location of the services, but you can set this property to override that location for the individual Operation.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "forcePartArrays",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines whether or not a single or empty return value for an output message part that is defined as an array should be returned as an array containing one (or zero, respectively) elements. This is applicable for document/literal &quot;wrapped&quot; web services, where one or more of the elements that represent individual message parts in the &quot;wrapper&quot; sequence could have the maxOccurs attribute set with a value greater than 1. This is a hint that the corresponding part should be treated as an array even if the response contains zero or one values for that part. Setting forcePartArrays to true will always create an array for parts defined in this manner, regardless of the number of values returned. Leaving forcePartArrays as false will only create arrays if two or more elements are returned.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "headerFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines how the SOAP encoded headers are decoded. A value of <code>object</code> specifies that each header XML node will be decoded into a SOAPHeader object, and its <code>content</code> property will be an object structure as specified in the WSDL document. A value of <code>xml</code> specifies that the XML will be left as XMLNodes. A value of <code>e4x</code> specifies that the XML will be accessible using ECMAScript for XML (E4X) expressions.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "headers",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Accessor to an Array of SOAPHeaders that are to be sent on each invocation of the operation.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "httpHeaders",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Custom HTTP headers to be sent to the SOAP endpoint. If multiple headers need to be sent with the same name the value should be specified as an Array.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "ignoreWhitespace",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines whether whitespace is ignored when processing XML for a SOAP encoded request or response. The default is <code>true</code> and thus whitespace is not preserved. If an XML Schema type definition specifies a <code>whiteSpace</code> restriction set to <code>preserve</code> then ignoreWhitespace must first be set to false. Conversely, if a type <code>whiteSpace</code> restriction is set to <code>replace</code> or <code>collapse</code> then that setting will be honored even if ignoreWhitespace is set to false.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "makeObjectsBindable",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "When this value is true, anonymous objects returned are forced to bindable objects.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "multiplePartsFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines the type of the default result object for calls to web services that define multiple parts in the output message. A value of &quot;object&quot; specifies that the lastResult object will be an Object with named properties corresponding to the individual output parts. A value of &quot;array&quot; would make the lastResult an array, where part values are pushed in the order they occur in the body of the SOAP message. The default value for document- literal operations is &quot;object&quot;. The default for rpc operations is &quot;array&quot;. The multiplePartsFormat property is applicable only when resultFormat is &quot;object&quot; and ignored otherwise.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "request",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The request of the Operation is an object structure or an XML structure. If you specify XML, the XML is sent as is. If you pass an object, it is encoded into a SOAP XML structure.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "resultFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines how the Operation result is decoded. A value of <code>object</code> specifies that the XML will be decoded into an object structure as specified in the WSDL document. A value of <code>xml</code> specifies that the XML will be left as XMLNodes. A value of <code>e4x</code> specifies that the XML will be accessible using ECMAScript for XML (E4X) expressions.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "resultHeaders",
        "namespace": "public",
        "bindable": ["resultForBinding"],
        "details": [],
        "deprecated": {},
          "description": "The headers that were returned as part of the last execution of this operation. They match up with the <code>lastResult</code> property and are the same as the collection of headers that are dispatched individually as HeaderEvents.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "xmlSpecialCharsFilter",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a custom function used to escape XML special characters before encoding any simple content. Valid for all operations on the web service unless specifically overwritten on the operation level. If no function is provided, the defaults is whatever is set by the particular implementation of IXMLEncoder.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.rpc.wsdl.WSDLOperation",
        "qname": "wsdlOperation",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "method",
        "qname": "addHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds a header that is applied only to this Operation. The header can be provided in a pre-encoded form as an XML instance, or as a SOAPHeader instance which leaves the encoding up to the internal SOAP encoder.",
        "tags": [
        {  "tagName": "param",
               "values": ["header The SOAP header to add to this Operation."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "header", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "addSimpleHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds a header that is applied only to this Operation.",
        "tags": [
        {  "tagName": "param",
               "values": ["qnameLocal the localname for the header QName", "qnameNamespace the namespace for header QName", "headerName Name of the header.", "headerValue Value of the header."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "qnameLocal", "type": "String"},
        { "name": "qnameNamespace", "type": "String"},
        { "name": "headerName", "type": "String"},
        { "name": "headerValue", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "cancel",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.rpc.AsyncToken",
          "params": [{ "name": "id", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "clearHeaders",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clears the headers for this individual Operation.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "getHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a header if a match is found based on QName localName and URI.",
        "tags": [
        {  "tagName": "param",
               "values": ["qname QName of the SOAPHeader.", "headerName Name of a header in the SOAPHeader content (Optional)"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["Returns the SOAPHeader."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.rpc.soap.SOAPHeader",
          "params": [{ "name": "qname", "type": "QName"},
        { "name": "headerName", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "removeHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the header with the given QName from all operations.",
        "tags": [
        {  "tagName": "param",
               "values": ["qname QName of the SOAPHeader.", "headerName Name of a header in the SOAPHeader content (Optional)"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "qname", "type": "QName"},
        { "name": "headerName", "type": "String"}]}
      ]
  ,
  "events": [
  { "qname": "header",
        "type": "mx.rpc.events.HeaderEvent"
      ,
          "description": "Dispatched when an Operation invocation returns with SOAP headers in the response. A HeaderEvent is dispatched for each SOAP header.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.rpc.events.HeaderEvent.HEADER"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }



