{ "type": "class",
  "qname": "mx.rpc.soap.mxml.Operation",
  "baseClassname": "mx.rpc.soap.Operation"
  ,
    "description": "An Operation used specifically by WebServices. An Operation is an individual method on a service. An Operation can be called either by invoking the function of the same name on the service or by accessing the Operation as a property on the service and calling the <code>send()</code> method.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.rpc.soap.mxml.Operation",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a new Operation.",
        "tags": [
        {  "tagName": "param",
               "values": ["webService The web service upon which this Operation is invoked.", "name The name of this Operation."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "webService", "type": "mx.rpc.soap.WebService"},
        { "name": "name", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "concurrency",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The concurrency for this Operation.  If it has not been explicitly set the setting from the WebService will be used.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "setService",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "ro", "type": "mx.rpc.AbstractService"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "showBusyCursor",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Whether this operation should show the busy cursor while it is executing. If it has not been explicitly set the setting from the WebService will be used.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "cancel",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.rpc.AsyncToken",
          "params": [{ "name": "id", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "invoke",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "mx.rpc.AsyncToken",
          "params": [{ "name": "message", "type": "mx.messaging.messages.IMessage"},
        { "name": "token", "type": "mx.rpc.AsyncToken"}]}
      ,
      { "type": "method",
        "qname": "preHandle",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "mx.rpc.AsyncToken",
          "params": [{ "name": "event", "type": "mx.messaging.events.MessageEvent"}]}
      ]
  }
