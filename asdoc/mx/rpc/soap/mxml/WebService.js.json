{ "type": "class",
  "qname": "mx.rpc.soap.mxml.WebService",
  "baseClassname": "mx.rpc.soap.WebService"
  ,
    "description": "The &lt;mx:WebService&gt; tag gives you access to the operations of SOAP-compliant web services. <p> The &lt;mx:WebService&gt; tag accepts the following tag attributes: </p> <pre>\\n &lt;mx:WebService\\n <b>Properties</b>\\n concurrency=&quot;multiple|single|last&quot;\\n destination=&quot;<i>No default.</i>&quot;\\n id=&quot;<i>No default.</i>&quot;\\n serviceName=&quot;<i>No default.</i>&quot;\\n showBusyCursor=&quot;false|true&quot;\\n makeObjectsBindable=&quot;false|true&quot;\\n useProxy=&quot;false|true&quot;\\n wsdl=&quot;<i>No default.</i>&quot;\\n \\n <b>Events</b>\\n fault=&quot;<i>No default.</i>&quot;\\n result=&quot;<i>No default.</i>&quot;\\n /&gt;\\n </pre> </p> <p> An &lt;mx:WebService&gt; tag can have multiple &lt;mx:operation&gt; tags, which have the following tag attributes: </p> <pre>\\n &lt;mx:operation\\n <b>Properties</b>\\n concurrency=&quot;multiple|single|last&quot;\\n name=<i>No default, required.</i>\\n resultFormat=&quot;object|xml|e4x&quot;\\n makeObjectsBindable=&quot;false|true&quot;\\n \\n \\n <b>Events</b>\\n fault=<i>No default.</i>\\n result=<i>No default.</i>\\n /&gt;\\n </pre>  An &lt;mx:Operation&gt; tag contains an &lt;mx:request&gt; tag. To specify an XML structure in an &lt;mx:request&gt; tag, you must set the value of the tag's <code>format</code> attribute to <code>&quot;xml&quot;</code>. Otherwise, the body is converted into Objects.",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/WebServiceExample.mxml -noswf"]},
      {  "tagName": "mxml",
         "values": [""]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.rpc.soap.mxml.WebService",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a new WebService component.  match a destination name in the services-config.xml file. If unspecified, the WebService component uses the DefaultHTTP destination.",
        "tags": [
        {  "tagName": "param",
               "values": ["destination The destination of the WebService, which should"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "destination", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "concurrency",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Value that indicates how to handle multiple calls to the same service. The default value is multiple. The following values are permitted: <ul> <li>multiple - Existing requests are not cancelled, and the developer is responsible for ensuring the consistency of returned data by carefully managing the event stream. This is the default.</li> <li>single - Making only one request at a time is allowed on the method; additional requests made while a request is outstanding are immediately faulted on the client and are not sent to the server.</li> <li>last - Making a request causes the client to ignore a result or fault for any current outstanding request. Only the result or fault for the most recent request will be dispatched on the client. This may simplify event handling in the client application, but care should be taken to only use this mode when results or faults for requests may be safely ignored.</li> </ul>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "write-only",
        "return": "String",
        "qname": "protocol",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {
      
          "replacement":  "channelSet"}
        ,
            "description": "Deprecated, use the appropriate destination instead, or if using a url, use <code>DefaultHTTP</code> or <code>DefaultHTTPS</code>. The deprecated behavior will simply update the destination if the default is being used.",
          "tags": [
          {  "tagName": "playerversion",
                 "values": ["Flash 9", "AIR 1.1"]},
              {  "tagName": "productversion",
                 "values": ["Flex 3"]},
              {  "tagName": "langversion",
                 "values": ["3.0"]}  ]},
        { "type": "accessor",
          "access": "read-write",
          "return": "String",
          "qname": "serviceName",
          "namespace": "public",
          "bindable": [],
          "details": [],
          "deprecated": {
        
            "replacement":  "destination"}
          },
          { "type": "accessor",
            "access": "read-write",
            "return": "Boolean",
            "qname": "showBusyCursor",
            "namespace": "public",
            "bindable": [],
            "details": [],
            "deprecated": {},
              "description": "If <code>true</code>, a busy cursor is displayed while a service is executing. The default value is <code>false</code>.",
            "tags": [
            {  "tagName": "playerversion",
                   "values": ["Flash 9", "AIR 1.1"]},
                {  "tagName": "productversion",
                   "values": ["Flex 3"]},
                {  "tagName": "langversion",
                   "values": ["3.0"]}  ]},
          { "type": "method",
            "qname": "getOperation",
            "namespace": "public",
            "bindable": [],
            "details": ["override"],
            "deprecated": {},
              "description": "Returns an Operation of the given name. If the Operation wasn't created beforehand, a new <code>mx.rpc.soap.mxml.Operation</code> is created during this call. Operations are usually accessible by simply naming them after the service variable (<code>myService.someOperation</code>), but if your Operation name happens to match a defined method on the service (like <code>setCredentials</code>), you can use this method to get the Operation instead.",
            "tags": [
            {  "tagName": "param",
                   "values": ["name Name of the Operation."]},
                {  "tagName": "playerversion",
                   "values": ["Flash 9", "AIR 1.1"]},
                {  "tagName": "productversion",
                   "values": ["Flex 3"]},
                {  "tagName": "return",
                   "values": ["Operation that executes for this name."]},
                {  "tagName": "langversion",
                   "values": ["3.0"]}  ],
              "return": "mx.rpc.AbstractOperation",
              "params": [{ "name": "name", "type": "String"}]}
          ,
          { "type": "method",
            "qname": "initialized",
            "namespace": "public",
            "bindable": [],
            "details": [],
            "deprecated": {},
              "description": "Called automatically by the MXML compiler if the WebService is setup using a tag.  If you create the WebService through ActionScript you may want to call this method yourself as it is useful for validating any arguments.",
            "tags": [
            {  "tagName": "param",
                   "values": ["document the MXML document on which this WebService lives", "id the id of this WebService within the document"]},
                {  "tagName": "playerversion",
                   "values": ["Flash 9", "AIR 1.1"]},
                {  "tagName": "productversion",
                   "values": ["Flex 3"]},
                {  "tagName": "langversion",
                   "values": ["3.0"]}  ],
              "return": "void",
              "params": [{ "name": "document", "type": "Object"},
            { "name": "id", "type": "String"}]}
          ,
          { "type": "method",
            "qname": "setDocument",
            "namespace": "public",
            "bindable": [],
            "details": [],
            "deprecated": {},
              "return": "void",
              "params": [{ "name": "document", "type": "Object"},
            { "name": "id", "type": "String"}]}
          ,
          { "type": "field",
            "qname": "document",
            "return": "Object",
            "namespace": "mx_internal",
            "bindable": [],
            "details": [],
            "deprecated": {}},
          { "type": "field",
            "qname": "id",
            "return": "String",
            "namespace": "mx_internal",
            "bindable": [],
            "details": [],
            "deprecated": {}}]
      }
    