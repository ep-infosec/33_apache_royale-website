{ "type": "class",
  "qname": "spark.components.supportClasses.DropDownListBase",
  "baseClassname": "spark.components.List"
  ,
    "description": "The DropDownListBase control contains a drop-down list from which the user can select a single value. Its functionality is very similar to that of the SELECT form element in HTML.  <p>The DropDownListBase control consists of the anchor button, and drop-down-list. Use the anchor button to open and close the drop-down-list. </p>  <p>When the drop-down list is open:</p> <ul> <li>Clicking the anchor button closes the drop-down list and commits the currently selected data item.</li> <li>Clicking outside of the drop-down list closes the drop-down list and commits the currently selected data item.</li> <li>Clicking on a data item selects that item and closes the drop-down list.</li> <li>If the <code>requireSelection</code> property is <code>false</code>, clicking on a data item while pressing the Control key deselects the item and closes the drop-down list.</li> </ul>  attributes of its superclass and adds the following attributes:</p>  <pre>\\n &lt;s:DropDownListBase\\n <strong>Styles</strong>\\n cornerRadius=&quot;4&quot;\\n dropShadowVisible=&quot;true&quot;\\n \\n <strong>Events</strong>\\n closed=&quot;<i>No default</i>&quot;\\n open=&quot;<i>No default</i>&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/DropDownListExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.skins.spark.DropDownListSkin", "spark.components.supportClasses.DropDownController"]},
      {  "tagName": "mxml",
         "values": ["<p>The <code>&lt;s:DropDownListBase&gt;</code> tag inherits all of the tag"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.supportClasses.DropDownListBase",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.collections.IList",
        "qname": "dataProvider",
        "namespace": "public",
        "bindable": ["dataProviderChanged"],
        "details": ["override"],
        "deprecated": {},
          "description": "Update the label if the dataProvider has changed",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "labelField",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "selectedIndex",
        "namespace": "public",
        "bindable": ["change","valueCommit"],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "selectedItem",
        "namespace": "public",
        "bindable": ["change","valueCommit"],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  ,
  "events": [
  { "qname": "open",
        "type": "spark.events.DropDownEvent"
      ,
          "description": "Dispatched when the user clicks the anchor button to display the drop-down list. It is also dispatched if the user uses Control-Down to open the dropDown.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["spark.events.DropDownEvent.OPEN"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
